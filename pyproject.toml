[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gender-bias-research"
version = "1.0.0"
description = "Research pipeline for analyzing gender bias in forum text embeddings"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["nlp", "gender-bias", "embeddings", "research", "text-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    # Core dependencies
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.1.0",
    "torch>=1.12.0",
    "transformers>=4.21.0",
    "sentence-transformers>=2.2.0",
    "openai>=1.0.0",
    
    # Data processing
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    
    # Machine learning
    "joblib>=1.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
notebooks = [
    "jupyter>=1.0.0",
    "ipywidgets>=8.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]

[project.scripts]
gender-label = "scripts.01_label_data:main"
gender-scrub = "scripts.02_scrub_text:main"
gender-embed = "scripts.03_generate_embeddings:main"
gender-train = "scripts.04_train_models:main"

[project.urls]
Homepage = "https://github.com/yourusername/gender-bias-research"
Documentation = "https://github.com/yourusername/gender-bias-research#readme"
Repository = "https://github.com/yourusername/gender-bias-research.git"
Issues = "https://github.com/yourusername/gender-bias-research/issues"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["src"]
force-single-line = true

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "sklearn.*",
    "torch.*",
    "transformers.*",
    "sentence_transformers.*",
    "openai.*",
    "tqdm.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]